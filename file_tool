#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2023/4/13 10:49
# @Author  : ykjiang2
# @Email   : ykjiang2@iflytek.com
# @File    : file_tool.py
import pandas as pd
import json


def read_xlsx(xlsx_path, usecols, sheet_name=None):
    df = pd.read_excel(xlsx_path, usecols=usecols, sheet_name=sheet_name)
    return df.values


def write_xlsx(data, columns, xlsx_file_path):
    '''
        data = [
            ["John", 25, "Engineer"],
            ["Alice", 30, "Manager"],
            ["Bob", 28, "Designer"]
        ]
        columns = ["Name", "Age", "Occupation"]
    :param data:
    :param columns:
    :param xlsx_file_path:
    :return:
    '''
    # 创建DataFrame对象
    df = pd.DataFrame(data, columns=columns)
    # 将DataFrame保存为xlsx文件
    df.to_excel(xlsx_file_path, index=False)


def read_xlsx_write_txt():
    df = pd.read_excel('20221123-1128_学生端96通(2203条)人工意图标注需求(1).xlsx', usecols=['回答', '人工转写', '当前节点', '人工意图'])
    with open('xs-onilne-20221209.txt', 'w', encoding='utf-8') as f:
        for i in df.values:
            print('\t'.join(i))
            f.write('\t'.join(i) + '\n')


def read_txt_list(txt_path):
    data = []
    for i in open(txt_path, 'r', encoding='utf-8').readlines():
        data.append(i.strip())
    return data


def write_txt_list(file_name: str, arr: list):
    with open(file_name,'w', encoding='utf-8') as f:
        for i in arr:
            f.writelines(i.strip()+'\n')


def read_json(json_path):
    return json.load(open(json_path,'r', encoding='utf-8'))
    # for -, v person_dialog json.load(open(json_path,'r',encoding='utf-8')).items():
    #       print(_， v)


def write_json(json_path, data_dict):
    '''
    字典类型格式化保持json文件，可提供自动换行
    :param json_path: 要保持的json路径
    :param data_dict: 待保持的字典数据
    :return:
    '''
    json_str = json.dumps(data_dict, indent=4, ensure_ascii=False)
    with open(json_path, 'w', encoding='utf-8') as json_file:
        json_file.write(json_str)

# s = \
# {
#     "time": ['0000-00-00 00:00:01.310', '0000-00-00 00:00:02.310', '0000-00-00 00:00:03.310', ..., '0000-00-00 00:08:43.360'], # 32.3s
#     # ["surprise", "fair", "disgust", "happy", "sad", "anger", "nonmal"]
#     "emo": ["normal", "normal", "happy", ..., "normal"],
#     "emo_score":[0.9974, 0.9983, 0.9731, ..., 0.9821]
# }
